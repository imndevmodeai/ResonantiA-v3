  "display_summary": {
    "description": "Format and display the final summary, search results with links/dates, and archive info.",
    "action_type": "execute_code",
    "inputs": {
      "language": "python",
      "code": "import json\nimport sys\nimport os\n\nBASE_OUTPUT_DIR = os.getenv(\"ARCHE_BASE_OUTPUT_DIR\")\n
input_json_str = sys.stdin.read()\ncontext_data = json.loads(input_json_str)\n\nsearch_status = context_data.get('search_status', 'N/A')\nsearch_conf = context_data.get('search_conf', 'N/A')\nsummary_status = context_data.get('summary_status', 'N/A')\nsummary_conf = context_data.get('summary_conf', 'N/A')\nsummary_text = context_data.get('summary_text', 'Summary generation failed or skipped.')\nuser_query = context_data.get('user_query', 'N/A')\n
# search_results now comes directly as a list/dict from the parsed context_data
search_results = context_data.get('search_results', []) 

output_lines = []\noutput_lines.append(f\"--- Analysis Summary (ResonantiA v3.0) ---\")\noutput_lines.append(f\"User Query: {user_query}\\n\")\noutput_lines.append(f\"Search Status: {search_status} (Confidence: {search_conf})\")\noutput_lines.append(f\"Summary Status: {summary_status} (Confidence: {summary_conf})\\n\")\noutput_lines.append(f\"LLM Summary:\\n{summary_text}\\n\")\n
if search_results:
    output_lines.append(f\"--- Detailed Search Results ({len(search_results)}) ---\")
    for i, res in enumerate(search_results):
        output_lines.append(f\"Result {i+1}:\")
        output_lines.append(f\"  Title: {res.get('title', 'N/A')} ({res.get('link', '#')})\")
        pub_date = res.get('publication_date') or res.get('result_date_snippet')
        output_lines.append(f\"  Date: {pub_date if pub_date else 'N/A'}\")
        output_lines.append(f\"  Snippet: {res.get('description', 'N/A')}\")
        if res.get('archived_html_path'):
            output_lines.append(f\"  Archived HTML: {res.get('archived_html_path')}\")
        if res.get('archived_screenshot_path'):
            output_lines.append(f\"  Archived Screenshot: {res.get('archived_screenshot_path')}\")
        if res.get('error_scraping'):
            output_lines.append(f\"  Scraping Error: {res.get('error_scraping')}\")
        output_lines.append(\"\")
else:
    output_lines.append(\"No detailed search results to display.\")

output_lines.append(\"---------------------------------------\")
final_output = '\n'.join(output_lines)
print(final_output)
result = {'formatted_display': final_output}
",
      "input_data": {
        "search_status": "{{ perform_search.reflection.status | default('N/A') }}",
        "search_conf": "{{ perform_search.reflection.confidence | default('N/A') }}",
        "summary_status": "{{ summarize_results.reflection.status | default('N/A') }}",
        "summary_conf": "{{ summarize_results.reflection.confidence | default('N/A') }}",
        "summary_text": "{{ summarize_results.response_text | default('Summary generation failed or skipped.') }}",
        "user_query": "{{ initial_context.user_query | default('N/A') }}",
        "search_results": "{{ perform_search.results }}" // Pass the actual list/dict
      }
    }
  } 