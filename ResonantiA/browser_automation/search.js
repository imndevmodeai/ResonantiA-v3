const puppeteer = require("puppeteer"); con st puppeteerExtra = require("puppeteer-extra"); const StealthPlugin = require("puppeteer-extra-plugin-stealth"); const ExtraPluginAnonymizeUa = require("puppeteer-extra-plugin-anonymize-ua"); puppeteerExtra.use(StealthPlugin()); puppeteerExtra.use(ExtraPluginAnonymizeUa()); (async () => { try { const query = process.argv[2] || "ResonantiA AI"; const searchEngine = process.argv[3] || "duckduckgo"; let searchUrl = "https://duckduckgo.com/html/"; if (searchEngine.toLowerCase() === "google") { searchUrl = "https://www.google.com"; } const browser = await puppeteerExtra.launch({ headless: true, args: ["--no-sandbox", "--disable-setuid-sandbox"] }); const page = await browser.newPage(); await page.goto(searchUrl, { waitUntil: "networkidle2" }); if (searchEngine.toLowerCase() === "google") { try { await page.waitForSelector("#L2AGLb", { timeout: 5000 }); await page.click("#L2AGLb"); await page.waitForNavigation({ timeout: 5000 }); } catch (e) { } } if (searchEngine.toLowerCase() === "google") { await page.type("input[name=\"q\"]", query); await page.keyboard.press("Enter"); await page.waitForSelector("div.g", { timeout: 10000 }); } else { await page.type("input[name=\"q\"]", query); await page.keyboard.press("Enter"); await page.waitForSelector(".result", { timeout: 10000 }); } const results = await page.evaluate((engine) => { let items; if (engine.toLowerCase() === "google") { items = Array.from(document.querySelectorAll("div.g")); } else { items = Array.from(document.querySelectorAll(".result")); } return items.slice(0, 5).map(item => { let titleElement, linkElement, descElement; if (engine.toLowerCase() === "google") { titleElement = item.querySelector("h3"); linkElement = item.querySelector("a"); descElement = item.querySelector(".VwiC3b"); } else { titleElement = item.querySelector(".result__title a"); linkElement = item.querySelector(".result__url a"); descElement = item.querySelector(".result__snippet"); } return { title: titleElement ? titleElement.textContent : "N/A", link: linkElement ? linkElement.href : "N/A", description: descElement ? descElement.textContent : "N/A" }; }); }, searchEngine); console.log(JSON.stringify(results, null, 2)); await browser.close(); } catch (error) { console.error(JSON.stringify({ error: error.message }, null, 2)); process.exit(1); } })();
