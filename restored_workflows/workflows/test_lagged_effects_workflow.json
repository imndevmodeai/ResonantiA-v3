{
  "name": "Test Lagged Effects Operation",
  "description": "Tests the 'estimate_lagged_effects' operation of the causal inference tool.",
  "version": "1.0",
  "tasks": {
    "run_lagged_effects": {
      "description": "Estimate lagged effects using VAR.",
      "action_type": "perform_causal_inference",
      "inputs": {
        "operation": "estimate_lagged_effects",
        "data": {
          "Time": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],
          "VarA": [2, 3, 2, 4, 3, 5, 4, 6, 5, 7, 6, 8, 7, 9, 8, 10, 9, 11, 10, 12, 11, 13, 12, 14, 13, 15, 14, 16, 15, 17],
          "VarB": [1, 1, 2, 2, 1, 3, 2, 1, 1, 2, 3, 2, 1, 1, 2, 3, 1, 2, 2, 1, 3, 1, 2, 3, 2, 1, 3, 2, 1, 2],
          "VarC": [5, 6, 7, 6, 8, 7, 9, 8, 10, 9, 11, 10, 12, 11, 13, 12, 14, 13, 15, 14, 16, 15, 17, 16, 18, 19, 20, 18, 19, 20]
        },
        "columns": ["VarA", "VarB", "VarC"],
        "max_lag": 3,
        "lag_criterion": "aic",
        "focus_variable": "VarA"
      },
      "outputs": {
        "lagged_effects": "dict",
        "var_model_summary": "str",
        "optimal_lag": "int",
        "reflection": "dict"
      },
      "dependencies": []
    },
    "display_lagged_effects_results": {
      "description": "Display the lagged effects estimation results.",
      "action_type": "display_output",
      "inputs": {
        "content": "Lagged Effects Test Results (Focus: VarA):\nOptimal Lag: {{ run_lagged_effects.optimal_lag }}\nLagged Effects (for VarA):\n{{ run_lagged_effects.lagged_effects.VarA | toJson }}\nFull Lagged Effects:\n{{ run_lagged_effects.lagged_effects | toJson }}\nVAR Summary (first 500 chars):\n{{ run_lagged_effects.var_model_summary | truncate(500) }}\nReflection: {{ run_lagged_effects.reflection | toJson }}"
      },
      "dependencies": ["run_lagged_effects"]
    }
  }
} 